<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:controls="clr-namespace:TimeMerge.Controls"
                    xmlns:utils="clr-namespace:TimeMerge.Utils" >

    <Style TargetType="controls:ImageButton">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="controls:ImageButton">
                    <Grid>
                        <ContentPresenter Focusable="False" Content="{TemplateBinding Content}" />
                        <ContentPresenter x:Name="PART_HoverContent" Focusable="False" Content="{TemplateBinding HoverContent}" Opacity="0" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
   
    <Style TargetType="controls:TimeMergeGauge">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType='controls:TimeMergeGauge'>
                    <Grid HorizontalAlignment="Center" VerticalAlignment="Center" >
                        <!-- Gauge background panel -->
                        <Ellipse Width="150" Height="150" Fill="DarkOrange" Margin="0,5,5,0" HorizontalAlignment="Center" />
                        <!-- "Red" range -->
                        <Ellipse Width="140" Height="140" Margin="0,5,5,0" HorizontalAlignment="Center">
                            <Ellipse.Fill>
                                <LinearGradientBrush StartPoint="0.3,0.8" EndPoint="0,0.2">
                                    <GradientStop Color="Transparent" Offset="0" />
                                    <GradientStop Color="DarkRed" Offset="0.1" />
                                    <GradientStop Color="Red" Offset="0.4" />
                                    <GradientStop Color="#FFFFCCCC" Offset="1" />
                                </LinearGradientBrush>
                            </Ellipse.Fill>
                            <Ellipse.OpacityMask>
                                <LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5001,0">
                                    <GradientStop Color="Black" Offset="0" />
                                    <GradientStop Color="Transparent" Offset="0" />
                                </LinearGradientBrush>
                            </Ellipse.OpacityMask>
                        </Ellipse>
                        <!-- "Green" range -->
                        <Ellipse Width="140" Height="140" Margin="0,5,5,0" HorizontalAlignment="Center">
                            <Ellipse.Fill>
                                <LinearGradientBrush StartPoint="0.7,0.8" EndPoint="1,0.2">
                                    <GradientStop Color="Transparent" Offset="0" />
                                    <GradientStop Color="DarkGreen" Offset="0.1" />
                                    <GradientStop Color="Green" Offset="0.4" />
                                    <GradientStop Color="LightGreen" Offset="1" />
                                </LinearGradientBrush>
                            </Ellipse.Fill>
                            <Ellipse.OpacityMask>
                                <LinearGradientBrush StartPoint="0.50001,0" EndPoint="0.5,0">
                                    <GradientStop Color="Black" Offset="0" />
                                    <GradientStop Color="Transparent" Offset="0" />
                                </LinearGradientBrush>
                            </Ellipse.OpacityMask>
                        </Ellipse>
                        <!-- Value pointer arrow -->
                        <Polygon Points="75,10 90,30 60,30" >
                            <Polygon.BitmapEffect>
                                <DropShadowBitmapEffect />
                            </Polygon.BitmapEffect>
                            <Polygon.Fill>
                                <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                    <GradientStop Color="Yellow" Offset="0" />
                                    <GradientStop Color="White" Offset="0.8" />
                                </LinearGradientBrush>
                            </Polygon.Fill>
                            <Polygon.RenderTransform>
                                <RotateTransform x:Name="valuePointerRotateTransform" CenterX="75" CenterY="80" />
                            </Polygon.RenderTransform>
                        </Polygon>
                        <!-- Gauge inner panel -->
                        <Ellipse Width="110" Height="110" Margin="0,5,5,0" HorizontalAlignment="Center">
                            <Ellipse.Fill>
                                <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                    <GradientStop Color="Yellow" Offset="-0.2" />
                                    <GradientStop Color="Orange" Offset="0.8" />
                                    <GradientStop Color="DarkOrange" Offset="1" />
                                </LinearGradientBrush>
                            </Ellipse.Fill>
                        </Ellipse>
                        <StackPanel Orientation="Vertical" VerticalAlignment="Top" HorizontalAlignment="Center" >
                            <!--<TextBlock Text="{Binding MonthViewModel.BalanceWholeMonth, Converter={StaticResource timeSpanSignConverter}, FallbackValue='+'}" FontSize="25" FontWeight="Bold" />-->
                            <!--<TextBlock Text="{Binding MonthViewModel.BalanceWholeMonth, StringFormat=h\\:mm, FallbackValue='0:00'}" FontSize="25" FontWeight="Bold" />-->
                            <TextBlock x:Name="valueTextBlock" FontSize="25" FontWeight="Bold" Margin="-10,60,0,0" />
                            <TextBlock x:Name="zeroBalanceReachedTextBlock" Visibility="Hidden" TextAlignment="Center" FontSize="15" Margin="0,5,0,0" FontWeight="Bold" Foreground="DarkGreen" />
                        </StackPanel>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- PillButtonCheckbox -->
    <Style TargetType="controls:PillButtonCheckbox">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="CheckBox">
                    <ControlTemplate.Resources>
                        <utils:NegationConverter x:Key="negationConverter" />
                    </ControlTemplate.Resources>
                    <StackPanel x:Name="shell" Orientation="Horizontal" HorizontalAlignment="Center" VerticalAlignment="Center">
                        <Grid ClipToBounds="True">
                            <ToggleButton x:Name="PART_OnButton"
                                          IsChecked="{Binding IsChecked, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}"
                                          Focusable="False" Margin="0,0,-3,0" Padding="{TemplateBinding Padding}" Foreground="{TemplateBinding Foreground}">[On]</ToggleButton>
                        </Grid>
                        <Line X1="0" Y1="0" X2="0" Y2="{Binding ActualHeight, ElementName=shell}" Stroke="{DynamicResource ToggleButtonBorderBrush}" StrokeThickness="1">
                            <Line.Style>
                                <Style TargetType="Line">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding IsEnabled, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}" Value="False">
                                            <DataTrigger.Setters>
                                                <Setter Property="Opacity" Value="{DynamicResource DisabledPillButton_Opacity}" />
                                            </DataTrigger.Setters>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Line.Style>
                        </Line>
                        <Grid ClipToBounds="True">
                            <ToggleButton x:Name="PART_OffButton"
                                          IsChecked="{Binding IsChecked, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay, Converter={StaticResource negationConverter}}"
                                          Focusable="False" Margin="-3,0,0,0" Padding="{TemplateBinding Padding}" Foreground="{TemplateBinding Foreground}">[Off]</ToggleButton>
                        </Grid>
                    </StackPanel>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>